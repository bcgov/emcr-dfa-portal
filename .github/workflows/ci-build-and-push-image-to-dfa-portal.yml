# This is the main workflow that creates a new image and push to Openshift image stream which in turn triggers the deployment

name: Main - Build and Push Image to Openshift Registry on DFA Portal Dev environment

# Controls when the workflow will run
on:
  # To run automatically
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

env:
  ENV_NAME: "dev"
  APP_NAME: "landing-page"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build and push"
  build-push-and-deploy-image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: dev

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Checkout
        uses: actions/checkout@v3
      
      # Get the version number which is prefixed with the Github release branches in format release/{version}
      - name: Get Release Version
        run: |
          branch=${GITHUB_REF##*/}
          version=$(echo $branch | cut -d "/" -f2-)
          echo "releaseVersion=$version" >> $GITHUB_ENV
      
      # Get Git latest short Sha# from the release branch used. This Sha# will be used in image tagging as well as DC Pod labelling.
      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-7)
          echo "gitsha=$shortSha" >> $GITHUB_ENV
      
      # Prints vital release paramters used
      - name: Print Release Variables
        run: |
          echo "Release Application: ${{ env.APP_NAME }}"
          echo "Release Environment: ${{ env.ENV_NAME }}"

      #Build image landing-page
      - name: Build image landing-page
        working-directory: ./landing-page/src/
        run: |
          docker build -t ${{ env.APP_NAME }} --file Dockerfile .
      
      #Login to OpenShift Container Repository - Silver
      - name: Login to OpenShift Container Repository - Silver
        uses: docker/login-action@v2
        with:
          registry: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY_SILVER}}
          username: ${{secrets.OPENSHIFT_DFA_SA_PIPELINE_USERNAME_SILVER}}
          password: ${{secrets.OPENSHIFT_DFA_PORTAL_SA_PIPELINE_TOKEN_SILVER}}
  
      #Push image justin-courtlist-api to OpenShift Image stream - Silver
      - name: Push Image landing-page to Openshift Image Stream - Silver
        env:
          IMAGE: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY_SILVER}}/${{secrets.OPENSHIFT_DFA_PORTAL_LICENSE_PLATE_SILVER}}-tools/${{ env.APP_NAME }}:latest
        run: |
          docker tag ${{ env.APP_NAME }} ${IMAGE}
          docker push ${IMAGE}